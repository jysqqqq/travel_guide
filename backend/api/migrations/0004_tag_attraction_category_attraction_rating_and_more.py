# Generated by Django 5.1.4 on 2025-01-04 13:37

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0003_favorite'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='标签名')),
                ('category', models.CharField(max_length=50, verbose_name='标签分类')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
            },
        ),
        migrations.AddField(
            model_name='attraction',
            name='category',
            field=models.CharField(default='景点', max_length=50, verbose_name='景点类型'),
        ),
        migrations.AddField(
            model_name='attraction',
            name='rating',
            field=models.FloatField(default=5.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)], verbose_name='平均评分'),
        ),
        migrations.AddField(
            model_name='attraction',
            name='recommended_duration',
            field=models.CharField(blank=True, max_length=50, verbose_name='建议游玩时长'),
        ),
        migrations.AddField(
            model_name='attraction',
            name='views_count',
            field=models.PositiveIntegerField(default=0, verbose_name='浏览量'),
        ),
        migrations.AddField(
            model_name='destination',
            name='best_season',
            field=models.CharField(blank=True, max_length=50, verbose_name='最佳旅游季节'),
        ),
        migrations.AddField(
            model_name='destination',
            name='category',
            field=models.CharField(default='景区', max_length=50, verbose_name='目的地类型'),
        ),
        migrations.AddField(
            model_name='destination',
            name='rating',
            field=models.FloatField(default=5.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)], verbose_name='平均评分'),
        ),
        migrations.AddField(
            model_name='destination',
            name='views_count',
            field=models.PositiveIntegerField(default=0, verbose_name='浏览量'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='评论内容')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='评分')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('attraction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.attraction', verbose_name='景点')),
                ('destination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.destination', verbose_name='目的地')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '评论',
                'verbose_name_plural': '评论',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='attraction',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='attractions', to='api.tag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='destination',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='destinations', to='api.tag', verbose_name='标签'),
        ),
    ]
